name: Build .NET App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
#      - name: Build Docker image
#        run: |
#          docker build -t muhohoweb/tickets-service:1.0.5 .
#          docker images
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v1
#        with:
#            username: ${{ secrets.DOCKER_HUB_USERNAME }}
#            password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Push Docker image to Docker Hub
#        run: |
#          docker push muhohoweb/tickets-service:1.0.5

#      - name: Connect to VPN
#        run: |
#          # Write client certificate to file
#          echo "${{ secrets.VPN_CLIENT_CERT }}" > client.crt
#          # Write client private key to file
#          echo "${{ secrets.VPN_CLIENT_KEY }}" > client.key
#
#          # Write OPEN_VPN private key to file
#          echo "${{ secrets.OPEN_VPN }}" > config.ovpn
#
#          # Command to connect to VPN using certificates
#          # exec sudo openvpn --config config.ovpn --cert client.crt --key client.key --daemon
#          sudo openvpn --config config.ovpn --daemon
#          curl https://api.ipify.org
          
          
      - name: Install OpenVPN
        run: |
            sudo apt-get update
            sudo apt-get --assume-yes --no-install-recommends install openvpn
            echo "${{ secrets.OPEN_VPN }}" > config.ovpn
            echo "${{ secrets.MAIN_KEY_PRIVATE }}" > main_key.pem
          
      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: '127.0.0.1'
          FILE_OVPN: config.ovpn
          SECRET: ${{ secrets.VPN_CLIENT_KEY }}
          TLS_KEY: ""
        env:
          CA_CRT: ${{ secrets.VPN_CA_CRT}}
          USER_CRT: ${{ secrets.VPN_CLIENT_CERT }}
          USER_KEY: ${{ secrets.VPN_CLIENT_KEY }}
      
      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}  
          
      - name: Ssh to private ec2
        uses: appleboy/ssh-action@v0.1.10
        with:
            host: "10.0.141.195"
            key: ${{ secrets.MAIN_KEY_PRIVATE }}
            username: "ubuntu"
            port: 22
            script: | 
                  ls -la
        
      
      

